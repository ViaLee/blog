(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{448:function(t,s,a){t.exports=a.p+"assets/img/lifeCycle.cac7e5e5.png"},449:function(t,s,a){t.exports=a.p+"assets/img/renderControl.09225c1d.png"},474:function(t,s,a){"use strict";a.r(s);var e=a(57),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"react"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[t._v("#")]),t._v(" React")]),t._v(" "),e("h2",{attrs:{id:"jsx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsx"}},[t._v("#")]),t._v(" Jsx")]),t._v(" "),e("p",[t._v("react 中，经过 babel 编译--\x3eReact.createElement(react 17 不需要显式导入 react)"),e("br"),t._v("\nReact DOM 在渲染所有输入内容之前，默认会进行转义，这样可以有效地防止 XSS（cross-site-scripting, 跨站脚本）攻击。"),e("br"),t._v("\n可通过@babel/plugin-transform-react-jsx (opens new window)插件显式告诉 Babel 编译时需要将 JSX 编译为什么函数的调用（默认为 React.createElement）。")]),t._v(" "),e("h3",{attrs:{id:"react-createelement"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-createelement"}},[t._v("#")]),t._v(" React.createElement")]),t._v(" "),e("p",[t._v("createElement 方法会创建并返回一个对象，存放组件的信息，其$$typeof 为'REACT_ELEMENT_TYPE'"),e("br"),t._v("\nReact.isValidElement()检测是否为合法组件")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isValidElement")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("object")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" object "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n    object "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n    object"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$$"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REACT_ELEMENT_TYPE")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"react-component"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-component"}},[t._v("#")]),t._v(" React Component")]),t._v(" "),e("p",[t._v("区分函数组件和类组件：")]),t._v(" "),e("ol",[e("li",[t._v("XXX.prototype.isReactComponent 是否存在，存在————类组件，不存在————函数组件")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassComponent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isReactComponent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ClassComponent是类组件"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ClassComponent函数式组件"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("instanceof React.Component true————类组件，false————函数组件")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" clas "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassComponent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("ClassComponent is Class  ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("clas "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" func "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FunctionComponent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("FunctionComponent is Class  ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("func "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])])]),e("h2",{attrs:{id:"children-相关-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#children-相关-api"}},[t._v("#")]),t._v(" Children 相关 API")]),t._v(" "),e("p",[t._v("React.isValidElement(item) 判断是否 react element\nReact.Children.only 子节点是否单一\nReact.Children.forEach 遍历子节点\nReact.Children.forEach = React.Children.toArray + Array.prototype.forEach")]),t._v(" "),e("blockquote",[e("p",[t._v("通常与 React.cloneElement()一起使用操作 children,注入新的属性")])]),t._v(" "),e("h2",{attrs:{id:"单项数据流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单项数据流"}},[t._v("#")]),t._v(" 单项数据流")]),t._v(" "),e("ol",[e("li",[t._v("组件间 props 是只读的，自顶向下，流向单一。")]),t._v(" "),e("li",[t._v("数据改变驱动视图改变，而视图变化需要手动更新状态")])]),t._v(" "),e("h2",{attrs:{id:"生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),e("p",[e("img",{attrs:{src:a(448),alt:"LifeCycle"}}),t._v("\n错误处理："),e("br"),t._v("\nstatic getDerivedStateFromError(error) render 阶段，不可有副作用"),e("br"),t._v("\ncomponentDidCatch() commit 阶段，可有副作用"),e("br"),t._v("\ncomponentDidUpdate 与 useEffect 无依赖类似，每一次执行函数组件都会执行")]),t._v(" "),e("h3",{attrs:{id:"getsnapshotbeforeupdate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getsnapshotbeforeupdate"}},[t._v("#")]),t._v(" getSnapshotBeforeUpdate")]),t._v(" "),e("p",[t._v("获取更新前 DOM 信息的最佳时期，可进行和 dom 相关的计算\nreturn 一个快照作为 componentDidUpdate 的第三个参数")]),t._v(" "),e("h3",{attrs:{id:"useeffect-和-uselayouteffect-和-componentdidmount"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#useeffect-和-uselayouteffect-和-componentdidmount"}},[t._v("#")]),t._v(" useEffect 和 useLayoutEffect 和 componentDidMount")]),t._v(" "),e("p",[t._v("useEffect 在 commit 阶段的 layout 子阶段结束后异步调用（渲染后调用）"),e("br"),t._v("\ncomponentDidMount 和 useLayoutEffect：commit 的 layout 阶段同步调用（渲染前调用）")]),t._v(" "),e("h2",{attrs:{id:"_15vs16"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_15vs16"}},[t._v("#")]),t._v(" 15vs16")]),t._v(" "),e("h3",{attrs:{id:"更新过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新过程"}},[t._v("#")]),t._v(" 更新过程")]),t._v(" "),e("p",[t._v("15：同步不可中断")]),t._v(" "),e("ul",[e("li",[t._v("Reconciler（协调器）—— 负责找出变化的组件")]),t._v(" "),e("li",[t._v("Renderer（渲染器）—— 负责将变化的组件渲染到页面上。递归处理虚拟 DOM。")])]),t._v(" "),e("p",[t._v("16：异步可中断")]),t._v(" "),e("ul",[e("li",[t._v("Scheduler（调度器）—— 调度任务的优先级，高优任务优先进入 Reconciler"),e("br"),t._v("\n模拟 requestIdleCallback。不直接使用的原因：浏览器兼容性；触发频率不稳定（切换 tab）。")]),t._v(" "),e("li",[t._v("Reconciler（协调器）—— 负责找出变化的组件"),e("br"),t._v("\n调用 shouldYield，判断是否有剩余时间，标记有改变的虚拟 dom")]),t._v(" "),e("li",[t._v("Renderer（渲染器）—— 负责将变化的组件渲染到页面上")])]),t._v(" "),e("h2",{attrs:{id:"fiber"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fiber"}},[t._v("#")]),t._v(" Fiber")]),t._v(" "),e("h3",{attrs:{id:"fiber-节点-动态工作单元"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fiber-节点-动态工作单元"}},[t._v("#")]),t._v(" fiber 节点——动态工作单元")]),t._v(" "),e("p",[t._v("ReactElement —— reconciler ——> fiber"),e("br"),t._v("\n14 中 fiber 类型，关系有三种：child，return，sibling")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" FunctionComponent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数组件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ClassComponent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类组件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" IndeterminateComponent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化的时候不知道是函数组件还是类组件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" HostRoot "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Root Fiber 可以理解为根元素 ， 通过reactDom.render()产生的根元素")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" HostPortal "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对应  ReactDOM.createPortal 产生的 Portal")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" HostComponent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dom 元素 比如 <div>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" HostText "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 文本节点")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Fragment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对应 <React.Fragment>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Mode "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对应 <React.StrictMode>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ContextConsumer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对应 <Context.Consumer>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ContextProvider "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对应 <Context.Provider>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ForwardRef "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对应 React.ForwardRef")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Profiler "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对应 <Profiler/ >")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" SuspenseComponent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对应 <Suspense>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" MemoComponent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对应 React.memo 返回的组件")]),t._v("\n")])])]),e("h3",{attrs:{id:"fiber-架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fiber-架构"}},[t._v("#")]),t._v(" fiber 架构")]),t._v(" "),e("p",[t._v("双缓存：在内存中构建，直接替换"),e("br"),t._v("\n特点：有优先级调度的，异步可中断更新机制\nfiber——纤程，理解为协程的一种实现"),e("br"),t._v("\njs 中协程的实现：generator"),e("br"),t._v("\n不使用 generator 的原因：")]),t._v(" "),e("ul",[e("li",[t._v("有传染性，当某个函数变为 generator 后，该函数调用链上的其他函数会有影响")]),t._v(" "),e("li",[t._v("无法实现优先级。Generator 执行的中间状态是上下文关联的。")])]),t._v(" "),e("p",[t._v("首次调用 ReactDOM.render——创建 FiberRootNode(整个应用的根节点)"),e("br"),t._v("\n             ↓ current Fiber 树(当前页面内容)"),e("br"),t._v("\n之后调用 ReactDOM.render——创建 RootFiber(当前应用的根节点)")]),t._v(" "),e("h3",{attrs:{id:"首屏渲染、更新区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#首屏渲染、更新区别"}},[t._v("#")]),t._v(" 首屏渲染、更新区别")]),t._v(" "),e("p",[t._v("首屏渲染与更新的区别，首屏渲染创建 fiber 树的过程没有 diff 算法"),e("br"),t._v("\n对于两棵树都存在的 fiber 节点用 alternate 属性连接"),e("br"),t._v("\n若 rootFiber 有 alternate 指向，则会基于该指向树创建 workInProgress Fiber 树。"),e("br"),t._v("\n将 alternate 指向的 current fiber 和当前返回的 jsx 结构做对比，生成 workInProgress Fiber 树的过程就是进行"),e("code",[t._v("diff算法")]),t._v("。"),e("br"),t._v("\nworkInProgress Fiber 树 commit 后成为 FiberRootNode 的 current 指向，即变成 current 树。")]),t._v(" "),e("h3",{attrs:{id:"双缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#双缓存"}},[t._v("#")]),t._v(" 双缓存")]),t._v(" "),e("p",[t._v("中断更新时缓存当前状态，在恢复被中断更新时继续进行未完成的任务。")]),t._v(" "),e("h3",{attrs:{id:"context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#context"}},[t._v("#")]),t._v(" Context")]),t._v(" "),e("h4",{attrs:{id:"createcontext"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#createcontext"}},[t._v("#")]),t._v(" createContext")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" context "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  $$"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REACT_CONTEXT_TYPE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  _currentValue"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" defaultValue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Provider"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Consumer"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncontext"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Provider "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  $$"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REACT_PROVIDER_TYPE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  _context"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncontext"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Consumer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  $$"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REACT_CONTEXT_TYPE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  _context"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"强制重新渲染"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强制重新渲染"}},[t._v("#")]),t._v(" 强制重新渲染")]),t._v(" "),e("ol",[e("li",[t._v("forceUpdate："),e("br"),t._v("\n如果组件调用 forceUpdate,则全局的 hasForceUpdate=true，组件更新前检查如果为 true，则跳过 PureComponent 的浅比较和 shouldComponentUpdate 自定义比较，直接更新")]),t._v(" "),e("li",[t._v("context 的更新")])]),t._v(" "),e("h3",{attrs:{id:"suspense"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#suspense"}},[t._v("#")]),t._v(" Suspense")]),t._v(" "),e("p",[t._v("Suspense 在执行内部可以通过 try{}catch{} 方式捕获异常，这个异常通常是一个 Promise ，可以在这个 Promise 中进行数据请求工作，Suspense 内部会处理这个 Promise ，Promise 结束后，Suspense 会再一次重新 render 把数据渲染出来，达到异步渲染的效果。")]),t._v(" "),e("h3",{attrs:{id:"dangerouslysetinnerhtml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dangerouslysetinnerhtml"}},[t._v("#")]),t._v(" dangerouslySetInnerHTML")]),t._v(" "),e("p",[t._v("dangerouslySetInnerHTML 是 React 为浏览器 DOM 提供 innerHTML 的替换方案。直接设置 HTML 存在风险(xss 攻击)。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div dangerouslySetInnerHTML"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" __html"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<a href=\"\">跳转</a>'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("p",[t._v("内容不能包含 react 组件，如果包含，需要用 ReactDom.render 包裹渲染")]),t._v(" "),e("h3",{attrs:{id:"diff-算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#diff-算法"}},[t._v("#")]),t._v(" diff 算法")]),t._v(" "),e("ul",[e("li",[t._v("单一节点 diff")]),t._v(" "),e("li",[t._v("多节点 diff")])]),t._v(" "),e("p",[t._v("对比更新前后的 nodeList,为 node 标记 flag,需要考虑是以下三种情况的哪种情况：")]),t._v(" "),e("ol",[e("li",[t._v("节点增删")]),t._v(" "),e("li",[t._v("节点属性变化")]),t._v(" "),e("li",[t._v("节点位置移动")])]),t._v(" "),e("p",[t._v("三种情况的处理逻辑不同，情况 1&2 属于常见情况，3 不常见。"),e("br"),t._v("\n经历多轮遍历，优先处理常见情况，后处理不常见情况。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 虚拟dom节点数据结构")]),t._v("\ntype flag "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Placement"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Deletion"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Placement新增或移动，Deletion删除")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//node的唯一标识")]),t._v("\n  flag"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Flag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标记操作类型")]),t._v("\n  index"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//该node在同级node中的索引位置")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ntype NodeList "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("before"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodeList"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" after"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodeList")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodeList "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("NodeList "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历前准备工作")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.需要存一份beforeNode,且以O(1)复杂度就能找到对应的node")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" beforeMap "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Node"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  before"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    beforeMap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.遍历after,对比before，after，都存在的node，可复用，将存在两种情况：移动、不移动，如何判断？")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("after"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历逻辑")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("demo1:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新前")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" before "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新后")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" after "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"d"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("before"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" after"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n[\n  {key:'a',flag:\"Deletion\"},\n  {key:'d',flag:\"Placement\"}\n]\n*/")]),t._v("\n")])])]),e("p",[t._v("demo2:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新前")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" before "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新后")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" after "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("before"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" after"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 输出\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*\n[\n  {key: "b", flag: "Placement"},\n  {key: "a", flag: "Placement"}\n]\n\n由于b之前已经存在，{key: "b", flag: "Placement"}代表b对应DOM需要向后移动（对应parentNode.appendChild方法）。abc经过该操作后变为acb。\n\n由于a之前已经存在，{key: "a", flag: "Placement"}代表a对应DOM需要向后移动。acb经过该操作后变为cba。\n\n执行后的结果就是：页面中的abc变为cba。\n*/')]),t._v("\n")])])]),e("h3",{attrs:{id:"update-计算"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#update-计算"}},[t._v("#")]),t._v(" Update 计算")]),t._v(" "),e("h2",{attrs:{id:"hooks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hooks"}},[t._v("#")]),t._v(" Hooks")]),t._v(" "),e("h3",{attrs:{id:"代数效应"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代数效应"}},[t._v("#")]),t._v(" 代数效应")]),t._v(" "),e("p",[t._v("hooks 思想：将副作用从函数中分离，使函数功能纯粹。")]),t._v(" "),e("h3",{attrs:{id:"useeffect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#useeffect"}},[t._v("#")]),t._v(" useEffect")]),t._v(" "),e("p",[t._v("在 fiber 节点上维护了一个链表(memorizedState)，每个 hooks 都在对应的链表元素上存取数据，每个 hooks 有 mount 和 update 两个阶段。"),e("br"),t._v(" "),e("strong",[t._v("areHookInputsEqual")]),t._v("函数用来处理第二个参数：")]),t._v(" "),e("ul",[e("li",[t._v("当热更新的时候，就算依赖没有变，也需要重新执行 effect，这个是通过 ignorePreviousDependencies 变量来控制的。")]),t._v(" "),e("li",[t._v("deps 与上一个 deps 最对比，不一样则返回 false，触发更新，如果 prevDeps 是 null，直接返回 false，因此 useEffect 第二个参数传 undefined 或者 null 的话 effect 函数都会执行。")])]),t._v(" "),e("h3",{attrs:{id:"usecallback-和-usememo-区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usecallback-和-usememo-区别"}},[t._v("#")]),t._v(" useCallback 和 useMemo 区别")]),t._v(" "),e("p",[t._v("useCallback 缓存第一个参数；"),e("br"),t._v("\nuseMemo 执行第一个参数，缓存其结果。")]),t._v(" "),e("h2",{attrs:{id:"react-中的性能优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-中的性能优化"}},[t._v("#")]),t._v(" React 中的性能优化")]),t._v(" "),e("h3",{attrs:{id:"性能优化原则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#性能优化原则"}},[t._v("#")]),t._v(" 性能优化原则：")]),t._v(" "),e("p",[t._v("当父组件满足性能优化条件(state 不变--\x3eprops 不变) eagerState 策略"),e("br"),t._v("\n子孙组件可能命中性能优化(子组件的 state&context 不变时命中) bailout 策略"),e("br"),t._v("\n三者都不变则不会重新渲染")]),t._v(" "),e("h4",{attrs:{id:"如何比较-props-是否改变"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何比较-props-是否改变"}},[t._v("#")]),t._v(" 如何比较 props 是否改变")]),t._v(" "),e("ul",[e("li",[t._v("全等比较 高效，但不易命中 （react 默认）O(1)")]),t._v(" "),e("li",[t._v("浅比较 遍历对象 key/value 不高效，但易命中 （memo）O(n)")])]),t._v(" "),e("p",[t._v("为什么父组件 states 变子组件 props 就一定改变?"),e("br"),t._v("\n因为子组件 props 永远是一个新的{}，{}!=={}"),e("br"),t._v("\n根组件的 props 永远不变。")]),t._v(" "),e("p",[t._v("react 重新渲染会重新构建整棵树，递归遍历每个节点，每次访问节点都会有两个回调："),e("br"),t._v("\n递：每次访问节点会调用 "),e("code",[t._v("beginWork")]),t._v("，处理 newProps 和 oldProps 的对比等"),e("br"),t._v("\n归：直至访问到没有子节点的组件，则向上回归，依次调用 "),e("code",[t._v("completeWork")])]),t._v(" "),e("h3",{attrs:{id:"不使用-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#不使用-api"}},[t._v("#")]),t._v(" 不使用 api")]),t._v(" "),e("p",[t._v("把变的部分和不变的部分分离（props,state,context）")]),t._v(" "),e("ul",[e("li",[t._v("拆分为两个组件")]),t._v(" "),e("li",[t._v("不必重新渲染组件放在 children 里")])]),t._v(" "),e("h3",{attrs:{id:"相关-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相关-api"}},[t._v("#")]),t._v(" 相关 api")]),t._v(" "),e("h4",{attrs:{id:"purecomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#purecomponent"}},[t._v("#")]),t._v(" PureComponent")]),t._v(" "),e("p",[t._v("浅比较 state 和 props 是否相等；\nshouldComponentUpdate 的权重，大于 PureComponent；\n更新阶段对 state 和 props 的比较，用了 "),e("em",[t._v("shallowEqual")]),t._v(" 函数：")]),t._v(" "),e("ol",[e("li",[t._v("判断新老 state/props 是否相等")]),t._v(" "),e("li",[t._v("新老 state/props 是否为非对象/null")]),t._v(" "),e("li",[t._v("新老 state/props 的 keys 长度是否相等")]),t._v(" "),e("li",[t._v("遍历老 state/props，对比对应新 state/props 的值是否相等")])]),t._v(" "),e("h4",{attrs:{id:"react-memo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-memo"}},[t._v("#")]),t._v(" React.memo")]),t._v(" "),e("p",[t._v("是一个高阶组件")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("React"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("memo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Component"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" compare"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// compare 返回true：缓存，false：更新")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// shouldComponentUpdate 返回true：更新，false：缓存")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// compare 不传->使用shallowEqual函数浅比较props")]),t._v("\n")])])]),e("h3",{attrs:{id:"渲染控制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染控制"}},[t._v("#")]),t._v(" 渲染控制")]),t._v(" "),e("p",[e("img",{attrs:{src:a(449),alt:"RenderControl"}}),t._v("\n控制 render 的方法：")]),t._v(" "),e("ul",[e("li",[t._v("从父组件直接隔断子组件的渲染，经典的就是 memo，缓存 element 对象。")]),t._v(" "),e("li",[t._v("组件从自身来控制是否 render ，比如：PureComponent ，shouldComponentUpdate。")])]),t._v(" "),e("h1",{attrs:{id:"从-0-到-react-18"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从-0-到-react-18"}},[t._v("#")]),t._v(" 从 0 到 React 18")]),t._v(" "),e("p",[t._v("pnpm i eslint -D -w // -D dev 依赖 -w 根目录\nnpx eslint --init"),e("br"),t._v("\neslint 检查语法"),e("br"),t._v("\nprettier 格式化"),e("br"),t._v("\n模块化 esm")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("npx eslint --init\n\n✔ How would you like to use ESLint? · problems\n✔ What "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" of modules does your project use? · esm\n✔ Which framework does your project use? · none\n✔ Does your project use TypeScript? · No / Yes\n✔ Where does your code run? · browser\n✔ What "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" you want your config "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" to be in? · JSON\nThe config that you"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ve selected requires the following dependencies:\n\n@typescript-eslint/eslint-plugin@latest @typescript-eslint/parser@latest\n✔ Would you like to install them now? · No / Yes\n? Which package manager do you want to use? …\n  npm\n  yarn\n❯ pnpm\n\n# monorepo -w 根目录\n install error:  ERR_PNPM_ADDING_TO_ROOT  Running this command will add the dependency to the workspace root, which might not be what you want - if you really meant it, make it explicit by running this command again with the -w flag (or --workspace-root). If you don'")]),t._v("t want to see this warning anymore, you may "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" the ignore-workspace-root-check setting to true.\n")])])]),e("p",[t._v("commit-lint "),e("type",[t._v(": "),e("subject")],1)],1),t._v(" "),e("ul",[e("li",[t._v("feat 功能")]),t._v(" "),e("li",[t._v("fix Bug")]),t._v(" "),e("li",[t._v("chore 功能之外的更改")]),t._v(" "),e("li",[t._v("docs 文档")]),t._v(" "),e("li",[t._v("perf 性能")]),t._v(" "),e("li",[t._v("refactor 重构")]),t._v(" "),e("li",[t._v("test 测试")])]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"main"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// commonjs 规范")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"module"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index.js"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//es 规范")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"jsx-转换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsx-转换"}},[t._v("#")]),t._v(" jsx 转换")]),t._v(" "),e("p",[t._v("17v 之前转换为 React.createElement，之后转换为_jsx 方法（from 'react/jsx-runtime'）")]),t._v(" "),e("ul",[e("li",[t._v("编译时 bable 编译实现")]),t._v(" "),e("li",[t._v("运行时（_jsx 方法，React.createElement 方法）")])])])}),[],!1,null,null,null);s.default=n.exports}}]);